C51 COMPILER V9.54   MAIN                                                                  02/17/2018 01:40:06 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Source\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <ADUC841.H>
   2          
   3          
   4          #include "measurement.h"
   5          #include "screen.h"
   6          
   7          #define SCREEN_UPDATE_DELAY_TIME 500  //delay for screen update in milliseconds
   8          #define SWITCH_PORT  P2     // switches are connected to Port 2
   9          #define SWITCH_PORT_MASK 0x3; //00000011
  10          #define SWITCH_PORT_MODE 0xFF // 00 = all output FF = all input
  11          #define CLOCK_SPEED  11059200
  12          #define CLOCK_CYCLES_IN_ONE_MS = CLOCK_SPEED/1000
  13          #define CLOCK_CYCLES_IN_FOR_LOOP 22 // value from counting assembled code
  14          
  15          #define USE_CIRCULAR_BUFFER   // comment out to use block buffering
  16          
  17          
  18          // global variables
  19          uint8 mode = 0;
  20          unsigned int i=0;                 // counting variable
  21          
  22          //// function prototypes
  23          void init_pins();
  24          
  25          
  26          //void setup_timer2_freq_period_counting();
  27          //  
  28          //void update_display();        //push values to display
  29          void get_mode_from_pins();    //read mode from port
  30          void delay(uint16 period);    
  31          
  32          //void dc_voltage_measurment(); // functions to store measurements as required
  33          //void rms_measurment();        
  34          //void p2p_measurement();       
  35          //void frequency_measurement();
  36          
  37          
  38          void main (void) {
  39   1        // setup
  40   1        init_pins();
  41   1        init_screen();
  42   1        
  43   1        //loop
  44   1        while(1){
  45   2          update_display();
  46   2          get_mode_from_pins();
  47   2          delay(SCREEN_UPDATE_DELAY_TIME);
  48   2        }
  49   1      }
  50          
  51          void init_pins(){
  52   1      //switch_pins
  53   1      
  54   1        SWITCH_PORT = SWITCH_PORT_MASK; //explicitely set these pins leaving rest of port alone
C51 COMPILER V9.54   MAIN                                                                  02/17/2018 01:40:06 PAGE 2   

  55   1        
  56   1      //init output pins for screen
  57   1      
  58   1      }
  59          
  60          
  61          
  62          
  63          void get_mode_from_pins(){    //read mode from port
  64   1      
  65   1        uint8 pin_state;
  66   1        //read pins...
  67   1        pin_state = SWITCH_PORT & SWITCH_PORT_MASK
  68   1        //if pin state != mode, setup hardware
  69   1        if (pin_state != mode){ 
  70   2          mode = pin_state;
  71   2          
  72   2          switch(mode){   //setup hardware based on new mode
  73   3            case 0:   setup_timers_dc_averaging();      break;
  74   3            case 1:         break;
  75   3            case 2:         break;
  76   3            case 3:   setup_timers_freq_period_counting();      break;
  77   3            
  78   3          }
  79   2        }
  80   1      }   
  81          
  82          void delay(uint32 period){
  83   1      
  84   1        period = period*CLOCK_CYCLES_IN_ONE_MS/CLOCK_CYCLES_IN_FOR_LOOP;
  85   1         
  86   1        for (i = 0; i < period; i++)    // count clock cycles
  87   1        // Nb: the for loop above takes 22 clock cycles to execute as assembly
  88   1          {}
  89   1      
  90   1      }   
  91          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     85    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
